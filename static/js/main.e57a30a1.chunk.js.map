{"version":3,"sources":["components/Loader/Loader.tsx","components/PostsList/PostsList.tsx","api/api.ts","api/comments.ts","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","api/posts.ts","App.tsx","index.tsx"],"names":["Loader","className","PostsList","React","memo","userPost","selectedPostId","selectPost","length","map","post","userId","title","type","onClick","id","BASE_URL","NewCommentForm","createComment","postId","useState","name","setName","email","setEmail","body","setBody","handleSubmit","useCallback","event","preventDefault","fetch","method","headers","JSON","stringify","then","response","json","createComments","onSubmit","value","onChange","target","placeholder","PostDetails","selectedPost","setSelectedPost","comments","setComments","hideShow","setHideShow","getDetails","getComments","comment","prev","Math","floor","random","deleteComment","getDeleteComment","filter","useEffect","App","user","setUser","setSelectedPostId","setUserPost","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e57a30a1.chunk.js","sourcesContent":["import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport './PostsList.scss';\nimport { Post } from '../../types';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  userPost: Post[],\n  selectedPostId: number,\n  selectPost: (postId: number) => void,\n};\n\nexport const PostsList: React.FC<Props> = React.memo(({\n  userPost,\n  selectedPostId,\n  selectPost,\n}) => {\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {userPost.length\n          ? (userPost.map(post => {\n            return (\n              <li\n                key={post.id}\n                className=\"PostsList__item\"\n              >\n                <div>\n                  <b>\n                    [User #\n                    {post.userId}\n                    ]: &nbsp;\n                  </b>\n                  {post.title}\n                </div>\n\n                <button\n                  type=\"button\"\n                  className=\"PostsList__button button\"\n                  onClick={() => {\n                    selectPost(selectedPostId !== post.id ? post.id : 0);\n                  }}\n                >\n                  {selectedPostId !== post.id ? 'Open' : 'Close'}\n                </button>\n              </li>\n            );\n          })\n          ) : (<Loader />)}\n\n      </ul>\n    </div>\n  );\n});\n","export const BASE_URL = 'https://mate.academy/students-api';\n","import { BASE_URL } from './api';\n\nexport function getPostComments(postId: number) {\n  return fetch(`${BASE_URL}/comments?postId=${postId}`)\n    .then(response => response.json());\n}\n\nexport const createComments = (\n  postId: number,\n  name: string,\n  email: string,\n  body: string,\n) => {\n  return fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({\n      postId,\n      name,\n      email,\n      body,\n    }),\n  })\n    .then(response => response.json());\n};\n\nexport const getDeleteComment = (id: number) => {\n  return fetch(`${BASE_URL}/comments/${id}`, { method: 'DELETE' })\n    .then(response => response.json());\n};\n","import React, { useCallback, useState } from 'react';\nimport { Comment } from '../../types';\nimport './NewCommentForm.scss';\nimport { createComments } from '../../api/comments';\n\ntype Props = {\n  postId: number,\n  createComment: (comment: Omit<Comment, 'id'>) => void,\n};\n\nexport const NewCommentForm: React.FC<Props> = React.memo(({\n  createComment,\n  postId,\n}) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const handleSubmit = useCallback((event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (name && email && body) {\n      createComments(postId, name, email, body)\n        .then(response => createComment(response));\n    }\n\n    setName('');\n    setEmail('');\n    setBody('');\n  }, [postId, name, email, body]);\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={(event) => setName(event.target.value)}\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          onChange={(event) => setEmail(event.target.value)}\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          value={body}\n          onChange={(event) => setBody(event.target.value)}\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n});\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { getPostDetails } from '../../api/posts';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { Post, Comment } from '../../types';\nimport { getPostComments, getDeleteComment } from '../../api/comments';\n\ntype Props = {\n  selectedPostId: number,\n};\n\nexport const PostDetails: React.FC<Props> = React.memo(({ selectedPostId }) => {\n  const [selectedPost, setSelectedPost] = useState<Post | null>(null);\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [hideShow, setHideShow] = useState(true);\n\n  const getDetails = useCallback((id: number) => {\n    getPostDetails(id)\n      .then(response => setSelectedPost(response));\n  }, []);\n\n  const getComments = useCallback((id: number) => {\n    getPostComments(id)\n      .then((response: Comment[]) => setComments(response));\n  }, []);\n\n  const createComment = useCallback((comment) => {\n    setComments(prev => ([\n      ...prev,\n      {\n        id: Math.floor(Math.random() * 1000000),\n        ...comment,\n      },\n    ]));\n  }, []);\n\n  const deleteComment = useCallback((id: number) => {\n    getDeleteComment(id);\n    setComments(prev => prev.filter(comment => comment.id !== id));\n  }, []);\n\n  useEffect(() => {\n    setSelectedPost(null);\n    setComments([]);\n    getComments(selectedPostId);\n    getDetails(selectedPostId);\n  }, [selectedPostId, getDetails, getComments]);\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      {selectedPost && (\n        <>\n          <section className=\"PostDetails__post\">\n            <p>{selectedPost.body}</p>\n          </section>\n\n          <section className=\"PostDetails__comments\">\n            {comments.length ? (\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={() => setHideShow(!hideShow)}\n              >\n                {`${hideShow ? 'Hide' : 'Show'} ${comments.length} comments`}\n              </button>\n            ) : ('There are no comments yet!')}\n\n            {hideShow && (\n              <ul className=\"PostDetails__list\">\n                {comments.map(comment => (\n                  <li\n                    className=\"PostDetails__list-item\"\n                    key={comment.id}\n                  >\n                    <button\n                      type=\"button\"\n                      className=\"PostDetails__remove-button button\"\n                      onClick={() => deleteComment(comment.id)}\n                    >\n                      X\n                    </button>\n                    <p>{comment.body}</p>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </section>\n\n          <section>\n            <div className=\"PostDetails__form-wrapper\">\n              <NewCommentForm\n                postId={selectedPostId}\n                createComment={createComment}\n              />\n            </div>\n          </section>\n        </>\n      )}\n    </div>\n  );\n});\n","import { BASE_URL } from './api';\n\nexport function getUserPosts(userId: string) {\n  return fetch(`${BASE_URL}/posts?userId=${userId}`)\n    .then(response => response.json());\n}\n\nexport function getAllPosts() {\n  return fetch(`${BASE_URL}/posts`)\n    .then(response => response.json());\n}\n\nexport function getPostDetails(postId: number) {\n  return fetch(`${BASE_URL}/posts/${postId}`)\n    .then(response => response.json());\n}\n","import React, { useState, useEffect, useCallback } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { Post } from './types';\nimport { getUserPosts, getAllPosts } from './api/posts';\n\nconst App: React.FC = () => {\n  const [user, setUser] = useState('0');\n  const [selectedPostId, setSelectedPostId] = useState(0);\n  const [userPost, setUserPost] = useState<Post[]>([]);\n\n  const selectPost = useCallback((postId: number) => {\n    setSelectedPostId(postId);\n  }, []);\n\n  useEffect(() => {\n    if (user !== '0') {\n      getUserPosts(user)\n        .then(post => {\n          setUserPost(post);\n        });\n    } else {\n      getAllPosts()\n        .then(post => setUserPost(post));\n    }\n  }, [user]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            value={user}\n            onChange={(event) => setUser(event.target.value)}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            userPost={userPost}\n            selectedPostId={selectedPostId}\n            selectPost={selectPost}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <PostDetails selectedPostId={selectedPostId} />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}